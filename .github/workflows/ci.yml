name: Github CI

on:
  push:
    branches: [ "*" ]

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create .env file
        run: |
          echo "NEXT_PUBLIC_API_AUTH_BASE_URL=http://34.142.195.221/api/auth" >> .env
          echo "NEXT_PUBLIC_API_USER_BASE_URL=http://34.142.195.221/api/user" >> .env
          echo "NEXT_PUBLIC_API_PRODUCT_COUPON_BASE_URL=http://35.240.170.2/api/product-coupon" >> .env
          echo "NEXT_PUBLIC_API_TRANSACTION_COUPON_BASE_URL=http://35.240.170.2/api/transaction-coupon" >> .env
          echo "NEXT_PUBLIC_API_PRODUCT_BASE_URL=http://34.126.66.79/api/product" >> .env
          echo "NEXT_PUBLIC_API_CATEGORIES_BASE_URL=http://34.126.66.79/categories" >> .env
      - name: Docker login
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: echo "$DOCKER_PASSWORD" | docker login -u ${{ secrets.REGISTRY_USER }} --password-stdin docker.io
      - name: Set Docker BuildKit
        run: export DOCKER_BUILDKIT=1
      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.REGISTRY_USER }}/${{ secrets.IMAGE_NAME }}:${{ secrets.IMAGE_TAG }} .
          docker push ${{ secrets.REGISTRY_USER }}/${{ secrets.IMAGE_NAME }}:${{ secrets.IMAGE_TAG }}

  deploy:
    name: Deploy to GCP
    runs-on: ubuntu-latest
    needs: publish
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Install SSH client
        run: sudo apt-get install openssh-client
      - name: create ssh key
        run: echo "${{ secrets.SSH_KEY }}" > ssh-key.pem && cat ssh-key.pem
      - name: update permission
        run: chmod 400 ssh-key.pem
      - name: Deploy to GCP
        run: |
          ssh -o StrictHostKeyChecking=no -i ssh-key.pem ${{ secrets.GCP_USERNAME }}@${{ secrets.GCP_STATIC_IP }} "
            sudo docker container rm -f ${{ secrets.CONTAINER_NAME }} || true &&
            sudo docker image rm -f ${{ secrets.REGISTRY_USER }}/${{ secrets.IMAGE_NAME }}:${{ secrets.IMAGE_TAG }} || true &&
            sudo docker run --name ${{ secrets.CONTAINER_NAME }} -d -p 80:8080 ${{ secrets.REGISTRY_USER }}/${{ secrets.IMAGE_NAME }}:${{ secrets.IMAGE_TAG }}"